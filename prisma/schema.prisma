generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

//Todo o esquema do banco de dados no PRISMA ORM é feito dentro do schema.prisma, diferente de alguns
//outros ORMs que fazem a divisão por arquivos
//yarn prisma migrate dev para criar uma nova migration

model User {
  id     String  @id @default(uuid())
  Tokens Tokens?

  name     String
  email    String @unique
  password String

  birthDate  DateTime?
  cellNumber String?   @unique
  admin      Boolean   @default(false)

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  @@map("user")
}

//podemos verificar que os parâmetros no prisma são passados como "@algumaCoisa"

model Tokens {
  id     String @id @default(uuid())
  user   User   @relation(fields: [userId], references: [id], onUpdate: Cascade, onDelete: Cascade)
  userId String @unique

  token String

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  @@map("tokens")
}

model Library {
  id   String @id @default(uuid())
  name String @unique

  books library_book[]

  @@map("library")
}

model Book {
  id String @id @default(uuid())

  library library_book[]

  name      String @unique
  hourValue Float

  @@map("book")
}

model library_book {

  Library   Library? @relation(fields: [libraryId], references: [id])
  libraryId String
  Book      Book?    @relation(fields: [bookId], references: [id])
  bookId    String

  @@id([libraryId, bookId])
}
